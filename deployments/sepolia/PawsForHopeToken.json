{
  "address": "0x5091F028b9a4151EE9acDF255B3a55263508dEa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "frozen",
          "type": "bool"
        }
      ],
      "name": "AccountFrozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "AgentAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "AgentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ForcedTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "frozen",
          "type": "bool"
        }
      ],
      "name": "GlobalFreeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokensRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "addAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "forceTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "freezeAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeGlobal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemAddressContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "removeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "revokeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_redeemAddress",
          "type": "address"
        }
      ],
      "name": "setRedeemAddressContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "unfreezeAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unfreezeGlobal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x86d39d5f62330498caa321b34daedaa59f1822f6aa69b507503c094511a9c29c",
  "receipt": {
    "to": null,
    "from": "0x8F3d8E8aa095eb8D5A9AdD053e249955061EB358",
    "contractAddress": "0x5091F028b9a4151EE9acDF255B3a55263508dEa3",
    "transactionIndex": 67,
    "gasUsed": "1275947",
    "logsBloom": "0x
    "blockHash": "0xe93a4df6d075516de09e7a6f1d9e953ff45388358c9ab477365712a62aea2136",
    "transactionHash": "0x86d39d5f62330498caa321b34daedaa59f1822f6aa69b507503c094511a9c29c",
    "logs": [
      {
        "transactionIndex": 67,
        "blockNumber": 7502505,
        "transactionHash": "0x86d39d5f62330498caa321b34daedaa59f1822f6aa69b507503c094511a9c29c",
        "address": "0x5091F028b9a4151EE9acDF255B3a55263508dEa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008f3d8e8aa095eb8d5a9add053e249955061eb358"
        ],
        "data": "0x",
        "logIndex": 143,
        "blockHash": "0xe93a4df6d075516de09e7a6f1d9e953ff45388358c9ab477365712a62aea2136"
      }
    ],
    "blockNumber": 7502505,
    "cumulativeGasUsed": "8732374",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "6f4fcf22caf99c7c57c3a6335cd04135",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"AccountFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ForcedTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"GlobalFreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forceTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemAddressContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"revokeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_redeemAddress\",\"type\":\"address\"}],\"name\":\"setRedeemAddressContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unfreezeGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Burns tokens from a specified address\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address to burn tokens from\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"forceTransfer(address,address,uint256)\":{\"details\":\"Forces a transfer between two addresses\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Source address\",\"to\":\"Destination address\"}},\"freezeAccount(address)\":{\"details\":\"Freezes a specific account\",\"params\":{\"account\":\"Address of the account to freeze\"}},\"freezeGlobal()\":{\"details\":\"Enables global freeze on all transfers\"},\"mint(address,uint256)\":{\"details\":\"Mints new tokens to a specified address\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeTokens(address,uint256)\":{\"details\":\"Revokes tokens from an address and sends them to the owner\",\"params\":{\"amount\":\"Amount of tokens to revoke\",\"from\":\"Address to revoke tokens from\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Override of ERC20 transfer function to restrict transfers to redeem address only\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"to\":\"Destination address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Override of ERC20 transferFrom function to restrict transfers to redeem address only\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Source address\",\"to\":\"Destination address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unfreezeAccount(address)\":{\"details\":\"Unfreezes a specific account\",\"params\":{\"account\":\"Address of the account to unfreeze\"}},\"unfreezeGlobal()\":{\"details\":\"Disables global freeze on all transfers\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PawsForHopeToken.sol\":\"PawsForHopeToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/PawsForHopeToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n\\ncontract PawsForHopeToken is ERC20, Ownable {\\n\\n    mapping(address => bool) private agents;             // Mapping to track authorized agents\\n    mapping(address => bool) private frozenAccounts;     // Mapping to track frozen accounts\\n\\n    bool private globalFreeze;                          // Global freeze switch\\n    address public redeemAddressContract;               // Address where tokens can be redeemed\\n\\n    // Events for various contract actions\\n    event AccountFrozen(address indexed account, bool frozen);\\n    event GlobalFreeze(bool frozen);\\n    event ForcedTransfer(address indexed from, address indexed to, uint256 value);\\n    event TokensRevoked(address indexed from, uint256 value);\\n    event AgentAdded(address indexed agent);\\n    event AgentRemoved(address indexed agent);\\n\\n    /**\\n     * @dev Modifier to restrict functions to authorized agents only\\n     */\\n    modifier onlyAgent() {\\n        require(agents[msg.sender], \\\"Only agents can perform this action\\\");\\n        _;\\n    }\\n\\n\\n    constructor() ERC20(\\\"Paws For Hope Token\\\", \\\"PFHT\\\") Ownable(msg.sender) {}\\n\\n    function addAgent(address _agent) external onlyOwner {\\n        agents[_agent] = true;\\n        emit AgentAdded(_agent);\\n    }\\n\\n\\n    function removeAgent(address _agent) external onlyOwner {\\n        agents[_agent] = false;\\n        emit AgentRemoved(_agent);\\n    }\\n\\n    function setRedeemAddressContract(address _redeemAddress) external onlyOwner {\\n        require(_redeemAddress != address(0), \\\"Cannot set zero address\\\");\\n        redeemAddressContract = _redeemAddress;\\n    }\\n\\n    /**\\n     * @dev Mints new tokens to a specified address\\n     * @param to Address to receive the minted tokens\\n     * @param amount Amount of tokens to mint\\n     */\\n    function mint(address to, uint256 amount) external {\\n        _mint(to, amount);\\n    }\\n\\n    /**\\n     * @dev Burns tokens from a specified address\\n     * @param from Address to burn tokens from\\n     * @param amount Amount of tokens to burn\\n     */\\n    function burn(address from, uint256 amount) external onlyAgent {\\n        _burn(from, amount);\\n    }\\n\\n    /**\\n     * @dev Freezes a specific account\\n     * @param account Address of the account to freeze\\n     */\\n    function freezeAccount(address account) external onlyAgent {\\n        require(account != address(0), \\\"Cannot freeze zero address\\\");\\n        frozenAccounts[account] = true;\\n        emit AccountFrozen(account, true);\\n    }\\n\\n    /**\\n     * @dev Unfreezes a specific account\\n     * @param account Address of the account to unfreeze\\n     */\\n    function unfreezeAccount(address account) external onlyAgent {\\n        require(account != address(0), \\\"Cannot unfreeze zero address\\\");\\n        require(frozenAccounts[account], \\\"Account is not frozen\\\");\\n        frozenAccounts[account] = false;\\n        emit AccountFrozen(account, false);\\n    }\\n\\n    /**\\n     * @dev Enables global freeze on all transfers\\n     */\\n    function freezeGlobal() external onlyAgent {\\n        globalFreeze = true;\\n        emit GlobalFreeze(true);\\n    }\\n\\n    /**\\n     * @dev Disables global freeze on all transfers\\n     */\\n    function unfreezeGlobal() external onlyAgent {\\n        globalFreeze = false;\\n        emit GlobalFreeze(false);\\n    }\\n\\n    /**\\n     * @dev Forces a transfer between two addresses\\n     * @param from Source address\\n     * @param to Destination address\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function forceTransfer(address from, address to, uint256 amount) external onlyAgent {\\n        require(from != address(0), \\\"Transfer from zero address\\\");\\n        require(to != address(0), \\\"Transfer to zero address\\\");\\n        require(balanceOf(from) >= amount, \\\"Insufficient balance\\\");\\n\\n        _transfer(from, to, amount);\\n        emit ForcedTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Revokes tokens from an address and sends them to the owner\\n     * @param from Address to revoke tokens from\\n     * @param amount Amount of tokens to revoke\\n     */\\n    function revokeTokens(address from, uint256 amount) external onlyAgent {\\n        require(from != address(0), \\\"Revoke from zero address\\\");\\n        require(balanceOf(from) >= amount, \\\"Insufficient balance\\\");\\n\\n        _transfer(from, owner(), amount);\\n        emit TokensRevoked(from, amount);\\n    }\\n\\n    /**\\n     * @dev Override of ERC20 transfer function to restrict transfers to redeem address only\\n     * @param to Destination address\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function transfer(address to, uint256 amount) public override returns (bool) {\\n        require(to == redeemAddressContract, \\\"Transfers are only allowed to redeem address\\\");\\n        return super.transfer(to, amount);\\n    }\\n\\n    /**\\n     * @dev Override of ERC20 transferFrom function to restrict transfers to redeem address only\\n     * @param from Source address\\n     * @param to Destination address\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\\n        require(to == redeemAddressContract, \\\"Transfers are only allowed to redeem address\\\");\\n        return super.transferFrom(from, to, amount);\\n    }\\n    \\n}\",\"keccak256\":\"0x9f320cc14686f64034f6c801ade0224587e03424284e4a401779cf07219b038a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50336040518060400160405280601381526020017f5061777320466f7220486f706520546f6b656e00000000000000000000000000815250604051806040016040528060048152602001631411921560e21b8152508160039081620000779190620001c1565b506004620000868282620001c1565b5050506001600160a01b038116620000b857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000c381620000ca565b506200028d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014757607f821691505b6020821081036200016857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bc57600081815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd6200011c565b620001f581620001ee845462000132565b846200016e565b602080601f8311600181146200022d5760008415620002145750858301515b600019600386901b1c1916600185901b178555620001b8565b600085815260208120601f198616915b828110156200025e578886015182559484019460019091019084016200023d565b50858210156200027d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114b5806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806384e79842116100e3578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e14610345578063f26c159f1461037e578063f2fde38b1461039157600080fd5b8063a9059cbb14610312578063ac5f1c9f14610325578063bf7ff0481461033d57600080fd5b806397a6278e116100bd57806397a6278e146102d95780639dc29fac146102ec578063a1f98b93146102ff57600080fd5b806384e79842146102995780638da5cb5b146102ac57806395d89b41146102d157600080fd5b806340c10f1911610145578063715018a61161011f578063715018a61461026b578063721a37d214610273578063788649ea1461028657600080fd5b806340c10f191461022757806349fc73191461023a57806370a082311461024257600080fd5b806323b872dd1161017657806323b872dd146101f0578063313ce5671461020357806333bebb771461021257600080fd5b806306fdde031461019d578063095ea7b3146101bb57806318160ddd146101de575b600080fd5b6101a56103a4565b6040516101b29190611306565b60405180910390f35b6101ce6101c9366004611370565b610436565b60405190151581526020016101b2565b6002545b6040519081526020016101b2565b6101ce6101fe36600461139a565b610450565b604051601281526020016101b2565b61022561022036600461139a565b6104e2565b005b610225610235366004611370565b6106c4565b6102256106d2565b6101e26102503660046113d6565b6001600160a01b031660009081526020819052604090205490565b610225610783565b610225610281366004611370565b610797565b6102256102943660046113d6565b610929565b6102256102a73660046113d6565b610aa8565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016101b2565b6101a5610afc565b6102256102e73660046113d6565b610b0b565b6102256102fa366004611370565b610b5c565b61022561030d3660046113d6565b610bd1565b6101ce610320366004611370565b610c6e565b6008546102b99061010090046001600160a01b031681565b610225610cf9565b6101e26103533660046113f1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61022561038c3660046113d6565b610d9f565b61022561039f3660046113d6565b610eb7565b6060600380546103b390611424565b80601f01602080910402602001604051908101604052809291908181526020018280546103df90611424565b801561042c5780601f106104015761010080835404028352916020019161042c565b820191906000526020600020905b81548152906001019060200180831161040f57829003601f168201915b5050505050905090565b600033610444818585610ef5565b60019150505b92915050565b6008546000906001600160a01b0384811661010090920416146104cf5760405162461bcd60e51b815260206004820152602c60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420746f20726560448201526b6465656d206164647265737360a01b60648201526084015b60405180910390fd5b6104da848484610f07565b949350505050565b3360009081526006602052604090205460ff1661054d5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b0383166105a35760405162461bcd60e51b815260206004820152601a60248201527f5472616e736665722066726f6d207a65726f206164647265737300000000000060448201526064016104c6565b6001600160a01b0382166105f95760405162461bcd60e51b815260206004820152601860248201527f5472616e7366657220746f207a65726f2061646472657373000000000000000060448201526064016104c6565b80610619846001600160a01b031660009081526020819052604090205490565b10156106675760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016104c6565b610672838383610f2b565b816001600160a01b0316836001600160a01b03167f7b3ce50c216d2ccf9919c6b9f1bfb33f0350a33010f188750b4af38e00448138836040516106b791815260200190565b60405180910390a3505050565b6106ce8282610f8a565b5050565b3360009081526006602052604090205460ff1661073d5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6008805460ff191660019081179091556040519081527fee2c272f4a21f65428f2e80154e4e11f33a295b066693d03ac5f8a0f723723c5906020015b60405180910390a1565b61078b610fc0565b6107956000610fed565b565b3360009081526006602052604090205460ff166108025760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b0382166108585760405162461bcd60e51b815260206004820152601860248201527f5265766f6b652066726f6d207a65726f2061646472657373000000000000000060448201526064016104c6565b80610878836001600160a01b031660009081526020819052604090205490565b10156108c65760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016104c6565b6108e2826108dc6005546001600160a01b031690565b83610f2b565b816001600160a01b03167fb73c49a3a37a7aca291ba0ceaa41657012def406106a7fc386888f0f66e941cf8260405161091d91815260200190565b60405180910390a25050565b3360009081526006602052604090205460ff166109945760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b0381166109ea5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420756e667265657a65207a65726f20616464726573730000000060448201526064016104c6565b6001600160a01b03811660009081526007602052604090205460ff16610a525760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f742066726f7a656e000000000000000000000060448201526064016104c6565b6001600160a01b0381166000818152600760209081526040808320805460ff19169055519182527fa33e6b076d391e96626483b30e365719f79f1d6594aff6587649ffd6c82ed7fa91015b60405180910390a250565b610ab0610fc0565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec59190a250565b6060600480546103b390611424565b610b13610fc0565b6001600160a01b038116600081815260066020526040808220805460ff19169055517fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b9190a250565b3360009081526006602052604090205460ff16610bc75760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6106ce8282611057565b610bd9610fc0565b6001600160a01b038116610c2f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420736574207a65726f206164647265737300000000000000000060448201526064016104c6565b600880546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6008546000906001600160a01b038481166101009092041614610ce85760405162461bcd60e51b815260206004820152602c60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420746f20726560448201526b6465656d206164647265737360a01b60648201526084016104c6565b610cf2838361108d565b9392505050565b3360009081526006602052604090205460ff16610d645760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6008805460ff19169055604051600081527fee2c272f4a21f65428f2e80154e4e11f33a295b066693d03ac5f8a0f723723c590602001610779565b3360009081526006602052604090205460ff16610e0a5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b038116610e605760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420667265657a65207a65726f206164647265737300000000000060448201526064016104c6565b6001600160a01b038116600081815260076020908152604091829020805460ff1916600190811790915591519182527fa33e6b076d391e96626483b30e365719f79f1d6594aff6587649ffd6c82ed7fa9101610a9d565b610ebf610fc0565b6001600160a01b038116610ee957604051631e4fbdf760e01b8152600060048201526024016104c6565b610ef281610fed565b50565b610f02838383600161109b565b505050565b600033610f15858285611171565b610f20858585610f2b565b506001949350505050565b6001600160a01b038316610f5557604051634b637e8f60e11b8152600060048201526024016104c6565b6001600160a01b038216610f7f5760405163ec442f0560e01b8152600060048201526024016104c6565b610f028383836111e9565b6001600160a01b038216610fb45760405163ec442f0560e01b8152600060048201526024016104c6565b6106ce600083836111e9565b6005546001600160a01b031633146107955760405163118cdaa760e01b81523360048201526024016104c6565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661108157604051634b637e8f60e11b8152600060048201526024016104c6565b6106ce826000836111e9565b600033610444818585610f2b565b6001600160a01b0384166110c55760405163e602df0560e01b8152600060048201526024016104c6565b6001600160a01b0383166110ef57604051634a1406b160e11b8152600060048201526024016104c6565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561116b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161116291815260200190565b60405180910390a35b50505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461116b57818110156111da57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c6565b61116b8484848403600061109b565b6001600160a01b038316611214578060026000828254611209919061145e565b909155506112869050565b6001600160a01b038316600090815260208190526040902054818110156112675760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112a2576002805482900390556112c1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106b791815260200190565b600060208083528351808285015260005b8181101561133357858101830151858201604001528201611317565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461136b57600080fd5b919050565b6000806040838503121561138357600080fd5b61138c83611354565b946020939093013593505050565b6000806000606084860312156113af57600080fd5b6113b884611354565b92506113c660208501611354565b9150604084013590509250925092565b6000602082840312156113e857600080fd5b610cf282611354565b6000806040838503121561140457600080fd5b61140d83611354565b915061141b60208401611354565b90509250929050565b600181811c9082168061143857607f821691505b60208210810361145857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561044a57634e487b7160e01b600052601160045260246000fdfea264697066735822122049229f6cfda8570de093276d308fb49aeaee1518c300a6c1d758a3d63dcbda4c64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c806384e79842116100e3578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e14610345578063f26c159f1461037e578063f2fde38b1461039157600080fd5b8063a9059cbb14610312578063ac5f1c9f14610325578063bf7ff0481461033d57600080fd5b806397a6278e116100bd57806397a6278e146102d95780639dc29fac146102ec578063a1f98b93146102ff57600080fd5b806384e79842146102995780638da5cb5b146102ac57806395d89b41146102d157600080fd5b806340c10f1911610145578063715018a61161011f578063715018a61461026b578063721a37d214610273578063788649ea1461028657600080fd5b806340c10f191461022757806349fc73191461023a57806370a082311461024257600080fd5b806323b872dd1161017657806323b872dd146101f0578063313ce5671461020357806333bebb771461021257600080fd5b806306fdde031461019d578063095ea7b3146101bb57806318160ddd146101de575b600080fd5b6101a56103a4565b6040516101b29190611306565b60405180910390f35b6101ce6101c9366004611370565b610436565b60405190151581526020016101b2565b6002545b6040519081526020016101b2565b6101ce6101fe36600461139a565b610450565b604051601281526020016101b2565b61022561022036600461139a565b6104e2565b005b610225610235366004611370565b6106c4565b6102256106d2565b6101e26102503660046113d6565b6001600160a01b031660009081526020819052604090205490565b610225610783565b610225610281366004611370565b610797565b6102256102943660046113d6565b610929565b6102256102a73660046113d6565b610aa8565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016101b2565b6101a5610afc565b6102256102e73660046113d6565b610b0b565b6102256102fa366004611370565b610b5c565b61022561030d3660046113d6565b610bd1565b6101ce610320366004611370565b610c6e565b6008546102b99061010090046001600160a01b031681565b610225610cf9565b6101e26103533660046113f1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61022561038c3660046113d6565b610d9f565b61022561039f3660046113d6565b610eb7565b6060600380546103b390611424565b80601f01602080910402602001604051908101604052809291908181526020018280546103df90611424565b801561042c5780601f106104015761010080835404028352916020019161042c565b820191906000526020600020905b81548152906001019060200180831161040f57829003601f168201915b5050505050905090565b600033610444818585610ef5565b60019150505b92915050565b6008546000906001600160a01b0384811661010090920416146104cf5760405162461bcd60e51b815260206004820152602c60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420746f20726560448201526b6465656d206164647265737360a01b60648201526084015b60405180910390fd5b6104da848484610f07565b949350505050565b3360009081526006602052604090205460ff1661054d5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b0383166105a35760405162461bcd60e51b815260206004820152601a60248201527f5472616e736665722066726f6d207a65726f206164647265737300000000000060448201526064016104c6565b6001600160a01b0382166105f95760405162461bcd60e51b815260206004820152601860248201527f5472616e7366657220746f207a65726f2061646472657373000000000000000060448201526064016104c6565b80610619846001600160a01b031660009081526020819052604090205490565b10156106675760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016104c6565b610672838383610f2b565b816001600160a01b0316836001600160a01b03167f7b3ce50c216d2ccf9919c6b9f1bfb33f0350a33010f188750b4af38e00448138836040516106b791815260200190565b60405180910390a3505050565b6106ce8282610f8a565b5050565b3360009081526006602052604090205460ff1661073d5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6008805460ff191660019081179091556040519081527fee2c272f4a21f65428f2e80154e4e11f33a295b066693d03ac5f8a0f723723c5906020015b60405180910390a1565b61078b610fc0565b6107956000610fed565b565b3360009081526006602052604090205460ff166108025760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b0382166108585760405162461bcd60e51b815260206004820152601860248201527f5265766f6b652066726f6d207a65726f2061646472657373000000000000000060448201526064016104c6565b80610878836001600160a01b031660009081526020819052604090205490565b10156108c65760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016104c6565b6108e2826108dc6005546001600160a01b031690565b83610f2b565b816001600160a01b03167fb73c49a3a37a7aca291ba0ceaa41657012def406106a7fc386888f0f66e941cf8260405161091d91815260200190565b60405180910390a25050565b3360009081526006602052604090205460ff166109945760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b0381166109ea5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f7420756e667265657a65207a65726f20616464726573730000000060448201526064016104c6565b6001600160a01b03811660009081526007602052604090205460ff16610a525760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f742066726f7a656e000000000000000000000060448201526064016104c6565b6001600160a01b0381166000818152600760209081526040808320805460ff19169055519182527fa33e6b076d391e96626483b30e365719f79f1d6594aff6587649ffd6c82ed7fa91015b60405180910390a250565b610ab0610fc0565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec59190a250565b6060600480546103b390611424565b610b13610fc0565b6001600160a01b038116600081815260066020526040808220805460ff19169055517fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b9190a250565b3360009081526006602052604090205460ff16610bc75760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6106ce8282611057565b610bd9610fc0565b6001600160a01b038116610c2f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420736574207a65726f206164647265737300000000000000000060448201526064016104c6565b600880546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b6008546000906001600160a01b038481166101009092041614610ce85760405162461bcd60e51b815260206004820152602c60248201527f5472616e736665727320617265206f6e6c7920616c6c6f77656420746f20726560448201526b6465656d206164647265737360a01b60648201526084016104c6565b610cf2838361108d565b9392505050565b3360009081526006602052604090205460ff16610d645760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6008805460ff19169055604051600081527fee2c272f4a21f65428f2e80154e4e11f33a295b066693d03ac5f8a0f723723c590602001610779565b3360009081526006602052604090205460ff16610e0a5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016104c6565b6001600160a01b038116610e605760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420667265657a65207a65726f206164647265737300000000000060448201526064016104c6565b6001600160a01b038116600081815260076020908152604091829020805460ff1916600190811790915591519182527fa33e6b076d391e96626483b30e365719f79f1d6594aff6587649ffd6c82ed7fa9101610a9d565b610ebf610fc0565b6001600160a01b038116610ee957604051631e4fbdf760e01b8152600060048201526024016104c6565b610ef281610fed565b50565b610f02838383600161109b565b505050565b600033610f15858285611171565b610f20858585610f2b565b506001949350505050565b6001600160a01b038316610f5557604051634b637e8f60e11b8152600060048201526024016104c6565b6001600160a01b038216610f7f5760405163ec442f0560e01b8152600060048201526024016104c6565b610f028383836111e9565b6001600160a01b038216610fb45760405163ec442f0560e01b8152600060048201526024016104c6565b6106ce600083836111e9565b6005546001600160a01b031633146107955760405163118cdaa760e01b81523360048201526024016104c6565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661108157604051634b637e8f60e11b8152600060048201526024016104c6565b6106ce826000836111e9565b600033610444818585610f2b565b6001600160a01b0384166110c55760405163e602df0560e01b8152600060048201526024016104c6565b6001600160a01b0383166110ef57604051634a1406b160e11b8152600060048201526024016104c6565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561116b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161116291815260200190565b60405180910390a35b50505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461116b57818110156111da57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c6565b61116b8484848403600061109b565b6001600160a01b038316611214578060026000828254611209919061145e565b909155506112869050565b6001600160a01b038316600090815260208190526040902054818110156112675760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112a2576002805482900390556112c1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106b791815260200190565b600060208083528351808285015260005b8181101561133357858101830151858201604001528201611317565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461136b57600080fd5b919050565b6000806040838503121561138357600080fd5b61138c83611354565b946020939093013593505050565b6000806000606084860312156113af57600080fd5b6113b884611354565b92506113c660208501611354565b9150604084013590509250925092565b6000602082840312156113e857600080fd5b610cf282611354565b6000806040838503121561140457600080fd5b61140d83611354565b915061141b60208401611354565b90509250929050565b600181811c9082168061143857607f821691505b60208210810361145857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561044a57634e487b7160e01b600052601160045260246000fdfea264697066735822122049229f6cfda8570de093276d308fb49aeaee1518c300a6c1d758a3d63dcbda4c64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "details": "Burns tokens from a specified address",
        "params": {
          "amount": "Amount of tokens to burn",
          "from": "Address to burn tokens from"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "forceTransfer(address,address,uint256)": {
        "details": "Forces a transfer between two addresses",
        "params": {
          "amount": "Amount of tokens to transfer",
          "from": "Source address",
          "to": "Destination address"
        }
      },
      "freezeAccount(address)": {
        "details": "Freezes a specific account",
        "params": {
          "account": "Address of the account to freeze"
        }
      },
      "freezeGlobal()": {
        "details": "Enables global freeze on all transfers"
      },
      "mint(address,uint256)": {
        "details": "Mints new tokens to a specified address",
        "params": {
          "amount": "Amount of tokens to mint",
          "to": "Address to receive the minted tokens"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "revokeTokens(address,uint256)": {
        "details": "Revokes tokens from an address and sends them to the owner",
        "params": {
          "amount": "Amount of tokens to revoke",
          "from": "Address to revoke tokens from"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Override of ERC20 transfer function to restrict transfers to redeem address only",
        "params": {
          "amount": "Amount of tokens to transfer",
          "to": "Destination address"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Override of ERC20 transferFrom function to restrict transfers to redeem address only",
        "params": {
          "amount": "Amount of tokens to transfer",
          "from": "Source address",
          "to": "Destination address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unfreezeAccount(address)": {
        "details": "Unfreezes a specific account",
        "params": {
          "account": "Address of the account to unfreeze"
        }
      },
      "unfreezeGlobal()": {
        "details": "Disables global freeze on all transfers"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 307,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 313,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 315,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 317,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 319,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 2055,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "agents",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2059,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "frozenAccounts",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2061,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "globalFreeze",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 2063,
        "contract": "contracts/PawsForHopeToken.sol:PawsForHopeToken",
        "label": "redeemAddressContract",
        "offset": 1,
        "slot": "8",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}