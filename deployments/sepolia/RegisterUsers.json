{
  "address": "0xE104860e2caE646f2F2C96F4164a8459061cc988",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "AgentAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "AgentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "communityId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "CommunityCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "communityId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "MemberAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEntity",
          "type": "bool"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEntity",
          "type": "bool"
        }
      ],
      "name": "UserRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "addAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_communityId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "createCommunity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgents",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_communityId",
          "type": "uint256"
        }
      ],
      "name": "getCommunity",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "members",
              "type": "address[]"
            }
          ],
          "internalType": "struct RegisterUsers.Community",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAgent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isRegisteredEntity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isRegisteredUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_entity",
          "type": "address"
        }
      ],
      "name": "registerEntity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "removeAgent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_entity",
          "type": "address"
        }
      ],
      "name": "removeEntity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9dded99238dbc014a8f4c88eafb8c6535ef9579c3cbe90ca028a5013908d720f",
  "receipt": {
    "to": null,
    "from": "0x8F3d8E8aa095eb8D5A9AdD053e249955061EB358",
    "contractAddress": "0xE104860e2caE646f2F2C96F4164a8459061cc988",
    "transactionIndex": 118,
    "gasUsed": "1399079",
    "logsBloom": "0x
    "blockHash": "0x6aac55026b00e6309a48511d829172b967f7756b9625acd80f7e7e28d02c7dd8",
    "transactionHash": "0x9dded99238dbc014a8f4c88eafb8c6535ef9579c3cbe90ca028a5013908d720f",
    "logs": [
      {
        "transactionIndex": 118,
        "blockNumber": 7502449,
        "transactionHash": "0x9dded99238dbc014a8f4c88eafb8c6535ef9579c3cbe90ca028a5013908d720f",
        "address": "0xE104860e2caE646f2F2C96F4164a8459061cc988",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008f3d8e8aa095eb8d5a9add053e249955061eb358"
        ],
        "data": "0x",
        "logIndex": 249,
        "blockHash": "0x6aac55026b00e6309a48511d829172b967f7756b9625acd80f7e7e28d02c7dd8"
      }
    ],
    "blockNumber": 7502449,
    "cumulativeGasUsed": "28577920",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "6f4fcf22caf99c7c57c3a6335cd04135",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"AgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"AgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"CommunityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"communityId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEntity\",\"type\":\"bool\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEntity\",\"type\":\"bool\"}],\"name\":\"UserRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"addAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_communityId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgents\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_communityId\",\"type\":\"uint256\"}],\"name\":\"getCommunity\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"}],\"internalType\":\"struct RegisterUsers.Community\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isRegisteredEntity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isRegisteredUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entity\",\"type\":\"address\"}],\"name\":\"registerEntity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"removeAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entity\",\"type\":\"address\"}],\"name\":\"removeEntity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addAgent(address)\":{\"details\":\"Adds a new agent\",\"params\":{\"_agent\":\"Address of the agent to add - pet vets\"}},\"addMember(uint256,address)\":{\"details\":\"Adds a member to a community\",\"params\":{\"_communityId\":\"ID of the community\",\"_member\":\"Address of the member to add\"}},\"constructor\":{\"details\":\"Constructor initializes the contract with the deployer as owner\"},\"createCommunity(string,string)\":{\"details\":\"Creates a new community\",\"params\":{\"_description\":\"Description of the community\",\"_name\":\"Name of the community\"}},\"getAgents()\":{\"details\":\"Returns a list of all agents\"},\"getCommunity(uint256)\":{\"details\":\"Retrieves community information\",\"params\":{\"_communityId\":\"ID of the community\"}},\"isAgent(address)\":{\"details\":\"Checks if an address is an agent\",\"params\":{\"_address\":\"Address to check\"}},\"isRegisteredEntity(address)\":{\"details\":\"Checks if an address is a registered entity\",\"params\":{\"_address\":\"Address to check\"}},\"isRegisteredUser(address)\":{\"details\":\"Checks if an address is a registered user\",\"params\":{\"_address\":\"Address to check\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerEntity(address)\":{\"details\":\"Registers an entity\",\"params\":{\"_entity\":\"Address of the entity to register\"}},\"registerUser(address)\":{\"details\":\"Registers a normal user\",\"params\":{\"_user\":\"Address of the user to register\"}},\"removeAgent(address)\":{\"details\":\"Removes an agent\",\"params\":{\"_agent\":\"Address of the agent to remove\"}},\"removeEntity(address)\":{\"details\":\"Removes an entity\",\"params\":{\"_entity\":\"Address of the entity to remove\"}},\"removeUser(address)\":{\"details\":\"Removes a normal user\",\"params\":{\"_user\":\"Address of the user to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RegisterUsers.sol\":\"RegisterUsers\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/RegisterUsers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract RegisterUsers is Ownable {\\n\\n        // Counter for community IDs\\n    uint256 private communityIdCounter = 0;\\n\\n    // Struct to store community information\\n    struct Community {\\n        string name;\\n        string description;\\n        address creator;\\n        uint256 createdAt;\\n        address[] members;\\n    }\\n\\n\\n    mapping(uint256 => Community) private communities;     // Mapping to track communities\\n    mapping(address => bool) private agents;              // Mapping to track authorized agents\\n\\n    // Mappings to track registered users and entities\\n    mapping(address => bool) private registeredUsers;\\n    mapping(address => bool) private registeredEntities;\\n\\n    // Events\\n    event AgentAdded(address indexed agent);\\n    event AgentRemoved(address indexed agent);\\n    event UserRegistered(address indexed user, bool isEntity);\\n    event UserRemoved(address indexed user, bool isEntity);\\n    event CommunityCreated(uint256 indexed communityId, string name, address creator);\\n    event MemberAdded(uint256 indexed communityId, address member);\\n\\n     /**\\n     * @dev Modifier to restrict functions to authorized agents only\\n     */\\n    modifier onlyAgent() {\\n        require(agents[msg.sender], \\\"Only agents can perform this action\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor initializes the contract with the deployer as owner\\n     */\\n    constructor() Ownable(msg.sender) {}\\n\\n\\n    /**\\n     * @dev Adds a new agent\\n     * @param _agent Address of the agent to add - pet vets\\n     */\\n    function addAgent(address _agent) external onlyOwner {\\n        require(_agent != address(0), \\\"Cannot add zero address as agent\\\");\\n        require(!agents[_agent], \\\"Address is already an agent\\\");\\n        agents[_agent] = true;\\n        emit AgentAdded(_agent);\\n    }\\n\\n    /**\\n     * @dev Removes an agent\\n     * @param _agent Address of the agent to remove\\n     */\\n    function removeAgent(address _agent) external onlyOwner {\\n        require(agents[_agent], \\\"Address is not an agent\\\");\\n        agents[_agent] = false;\\n        emit AgentRemoved(_agent);\\n    }\\n\\n    /**\\n     * @dev Registers a normal user\\n     * @param _user Address of the user to register\\n     */\\n    function registerUser(address _user) external onlyAgent {\\n        require(_user != address(0), \\\"Cannot register zero address\\\");\\n        require(!registeredUsers[_user], \\\"User already registered\\\");\\n        require(!registeredEntities[_user], \\\"Address already registered as entity\\\");\\n        \\n        registeredUsers[_user] = true;\\n        emit UserRegistered(_user, false);\\n    }\\n\\n    /**\\n     * @dev Registers an entity\\n     * @param _entity Address of the entity to register\\n     */\\n    function registerEntity(address _entity) external onlyAgent {\\n        require(_entity != address(0), \\\"Cannot register zero address\\\");\\n        require(!registeredEntities[_entity], \\\"Entity already registered\\\");\\n        require(!registeredUsers[_entity], \\\"Address already registered as user\\\");\\n        \\n        registeredEntities[_entity] = true;\\n        emit UserRegistered(_entity, true);\\n    }\\n\\n    /**\\n     * @dev Creates a new community\\n     * @param _name Name of the community\\n     * @param _description Description of the community\\n     */\\n    function createCommunity(string calldata _name, string calldata _description) external {\\n        require(bytes(_name).length > 0, \\\"Community name cannot be empty\\\");\\n        require(bytes(_description).length > 0, \\\"Community description cannot be empty\\\");\\n        require(registeredUsers[msg.sender] || registeredEntities[msg.sender], \\\"Only registered users or entities can create communities\\\");\\n\\n        uint256 communityId = communityIdCounter++;\\n        Community storage newCommunity = communities[communityId];\\n        newCommunity.name = _name;\\n        newCommunity.description = _description;\\n        newCommunity.creator = msg.sender;\\n        newCommunity.createdAt = block.timestamp;\\n\\n        emit CommunityCreated(communityId, _name, msg.sender);\\n    }\\n    \\n    \\n    /**\\n     * @dev Adds a member to a community\\n     * @param _communityId ID of the community\\n     * @param _member Address of the member to add\\n     */\\n    function addMember(uint256 _communityId, address _member) external {\\n        require(_communityId < communityIdCounter, \\\"Community does not exist\\\");\\n        require(msg.sender == communities[_communityId].creator, \\\"Only the creator can add members\\\");\\n        require(registeredUsers[_member], \\\"Member must be a registered user\\\");\\n\\n        communities[_communityId].members.push(_member);\\n        emit MemberAdded(_communityId, _member);\\n    }\\n\\n    /**\\n     * @dev Retrieves community information\\n     * @param _communityId ID of the community\\n     */\\n    function getCommunity(uint256 _communityId) external view returns (Community memory) {\\n        require(_communityId < communityIdCounter, \\\"Community does not exist\\\");\\n        return communities[_communityId];\\n    }\\n\\n\\n    /**\\n     * @dev Removes a normal user\\n     * @param _user Address of the user to remove\\n     */\\n    function removeUser(address _user) external onlyAgent {\\n        require(_user != address(0), \\\"Cannot remove zero address\\\");\\n        require(registeredUsers[_user], \\\"User not registered\\\");\\n        \\n        registeredUsers[_user] = false;\\n        emit UserRemoved(_user, false);\\n    }\\n\\n    /**\\n     * @dev Returns a list of all agents\\n     */\\n    function getAgents() external view returns (address[] memory) {\\n        uint256 agentCount = 0;\\n        for (uint256 i = 0; i < block.number; i++) {\\n            if (agents[address(uint160(i))]) {\\n                agentCount++;\\n            }\\n        }\\n\\n        address[] memory agentList = new address[](agentCount);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < block.number; i++) {\\n            if (agents[address(uint160(i))]) {\\n                agentList[index++] = address(uint160(i));\\n            }\\n        }\\n        return agentList;\\n    }\\n\\n    /**\\n     * @dev Removes an entity\\n     * @param _entity Address of the entity to remove\\n     */\\n    function removeEntity(address _entity) external onlyAgent {\\n        require(_entity != address(0), \\\"Cannot remove zero address\\\");\\n        require(registeredEntities[_entity], \\\"Entity not registered\\\");\\n        \\n        registeredEntities[_entity] = false;\\n        emit UserRemoved(_entity, true);\\n    }\\n\\n    /**\\n     * @dev Checks if an address is a registered user\\n     * @param _address Address to check\\n     */\\n    function isRegisteredUser(address _address) external view returns (bool) {\\n        return registeredUsers[_address];\\n    }\\n\\n    /**\\n     * @dev Checks if an address is a registered entity\\n     * @param _address Address to check\\n     */\\n    function isRegisteredEntity(address _address) external view returns (bool) {\\n        return registeredEntities[_address];\\n    }\\n\\n    /**\\n     * @dev Checks if an address is an agent\\n     * @param _address Address to check\\n     */\\n    function isAgent(address _address) external view returns (bool) {\\n        return agents[_address];\\n    }\\n\\n}\",\"keccak256\":\"0x9e572325aafc217d40216cc9c0ce262eec981553a420dee958859661d9ab7a87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b50338061003c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100458161004b565b5061009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6117d9806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063dd18299611610066578063dd18299614610255578063eac3fda414610268578063ebb994311461027d578063f2fde38b1461029057600080fd5b80638da5cb5b146101e857806397a6278e146102035780639857518814610216578063daf60b711461022957600080fd5b8063370603f8116100d3578063370603f81461019a578063715018a6146101ba57806374d0a676146101c257806384e79842146101d557600080fd5b806303b28c33146101055780631f5bdf5d1461011a5780631ffbb0641461015b5780632199d5cd14610187575b600080fd5b6101186101133660046113ba565b6102a3565b005b610146610128366004611442565b6001600160a01b031660009081526004602052604090205460ff1690565b60405190151581526020015b60405180910390f35b610146610169366004611442565b6001600160a01b031660009081526003602052604090205460ff1690565b610118610195366004611442565b6104b9565b6101ad6101a8366004611464565b6106b1565b6040516101529190611507565b61011861091b565b6101186101d0366004611585565b61092f565b6101186101e3366004611442565b610ad7565b6000546040516001600160a01b039091168152602001610152565b610118610211366004611442565b610bea565b610118610224366004611442565b610ca3565b610146610237366004611442565b6001600160a01b031660009081526005602052604090205460ff1690565b610118610263366004611442565b610e1b565b610270610f96565b60405161015291906115b1565b61011861028b366004611442565b6110b4565b61011861029e366004611442565b6112a9565b826102f55760405162461bcd60e51b815260206004820152601e60248201527f436f6d6d756e697479206e616d652063616e6e6f7420626520656d707479000060448201526064015b60405180910390fd5b806103685760405162461bcd60e51b815260206004820152602560248201527f436f6d6d756e697479206465736372697074696f6e2063616e6e6f742062652060448201527f656d70747900000000000000000000000000000000000000000000000000000060648201526084016102ec565b3360009081526004602052604090205460ff168061039557503360009081526005602052604090205460ff165b6104075760405162461bcd60e51b815260206004820152603860248201527f4f6e6c792072656769737465726564207573657273206f7220656e746974696560448201527f732063616e2063726561746520636f6d6d756e6974696573000000000000000060648201526084016102ec565b6001805460009182610418836115c4565b9091555060008181526002602052604090209091508061043986888361168a565b506001810161044984868361168a565b5060028101805473ffffffffffffffffffffffffffffffffffffffff19163390811790915542600383015560405183917f4df3410150bc135fb5a7782051351442aaa4dc2b49b9180723c871b74e0a2201916104a9918a918a919061174b565b60405180910390a2505050505050565b3360009081526003602052604090205460ff166105245760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b03811661057a5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265676973746572207a65726f20616464726573730000000060448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16156105e35760405162461bcd60e51b815260206004820152601760248201527f5573657220616c7265616479207265676973746572656400000000000000000060448201526064016102ec565b6001600160a01b03811660009081526005602052604090205460ff16156106585760405162461bcd60e51b8152602060048201526024808201527f4164647265737320616c7265616479207265676973746572656420617320656e6044820152637469747960e01b60648201526084016102ec565b6001600160a01b0381166000818152600460209081526040808320805460ff19166001179055519182527f28a24a60e275c9be5babc23ecefd3240b1fcd56ef4d3fe4818437200b55ae5ff91015b60405180910390a250565b6106ec6040518060a00160405280606081526020016060815260200160006001600160a01b0316815260200160008152602001606081525090565b600154821061073d5760405162461bcd60e51b815260206004820152601860248201527f436f6d6d756e69747920646f6573206e6f74206578697374000000000000000060448201526064016102ec565b60008281526002602052604090819020815160a0810190925280548290829061076590611601565b80601f016020809104026020016040519081016040528092919081815260200182805461079190611601565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b505050505081526020016001820180546107f790611601565b80601f016020809104026020016040519081016040528092919081815260200182805461082390611601565b80156108705780601f1061084557610100808354040283529160200191610870565b820191906000526020600020905b81548152906001019060200180831161085357829003601f168201915b505050505081526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561090b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108ed575b5050505050815250509050919050565b6109236112e7565b61092d6000611314565b565b60015482106109805760405162461bcd60e51b815260206004820152601860248201527f436f6d6d756e69747920646f6573206e6f74206578697374000000000000000060448201526064016102ec565b600082815260026020819052604090912001546001600160a01b031633146109ea5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79207468652063726561746f722063616e20616464206d656d6265727360448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16610a525760405162461bcd60e51b815260206004820181905260248201527f4d656d626572206d75737420626520612072656769737465726564207573657260448201526064016102ec565b6000828152600260209081526040808320600401805460018101825590845292829020909201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516908117909155915191825283917ff328ac0f8bcae00933fe87ba0aa2d0d505c1df94bc9c1aa05b8441c28b74032c910160405180910390a25050565b610adf6112e7565b6001600160a01b038116610b355760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420616464207a65726f2061646472657373206173206167656e7460448201526064016102ec565b6001600160a01b03811660009081526003602052604090205460ff1615610b9e5760405162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c726561647920616e206167656e74000000000060448201526064016102ec565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec59190a250565b610bf26112e7565b6001600160a01b03811660009081526003602052604090205460ff16610c5a5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e206167656e7400000000000000000060448201526064016102ec565b6001600160a01b038116600081815260036020526040808220805460ff19169055517fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b9190a250565b3360009081526003602052604090205460ff16610d0e5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b038116610d645760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656d6f7665207a65726f206164647265737300000000000060448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16610dcc5760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f7420726567697374657265640000000000000000000000000060448201526064016102ec565b6001600160a01b0381166000818152600460209081526040808320805460ff19169055519182527f57ffeda2cca1356c20c3f388d439e7ee49a825f846a911f8981726bea201188f91016106a6565b3360009081526003602052604090205460ff16610e865760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b038116610edc5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656d6f7665207a65726f206164647265737300000000000060448201526064016102ec565b6001600160a01b03811660009081526005602052604090205460ff16610f445760405162461bcd60e51b815260206004820152601560248201527f456e74697479206e6f742072656769737465726564000000000000000000000060448201526064016102ec565b6001600160a01b038116600081815260056020908152604091829020805460ff191690559051600181527f57ffeda2cca1356c20c3f388d439e7ee49a825f846a911f8981726bea201188f91016106a6565b60606000805b43811015610fe5576001600160a01b03811660009081526003602052604090205460ff1615610fd35781610fcf816115c4565b9250505b80610fdd816115c4565b915050610f9c565b5060008167ffffffffffffffff811115611001576110016115eb565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5090506000805b438110156110ab576001600160a01b03811660009081526003602052604090205460ff161561109957808383611066816115c4565b9450815181106110785761107861178d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b806110a3816115c4565b915050611031565b50909392505050565b3360009081526003602052604090205460ff1661111f5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b0381166111755760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265676973746572207a65726f20616464726573730000000060448201526064016102ec565b6001600160a01b03811660009081526005602052604090205460ff16156111de5760405162461bcd60e51b815260206004820152601960248201527f456e7469747920616c726561647920726567697374657265640000000000000060448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16156112525760405162461bcd60e51b815260206004820152602260248201527f4164647265737320616c7265616479207265676973746572656420617320757360448201526132b960f11b60648201526084016102ec565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600190811790915591519182527f28a24a60e275c9be5babc23ecefd3240b1fcd56ef4d3fe4818437200b55ae5ff91016106a6565b6112b16112e7565b6001600160a01b0381166112db57604051631e4fbdf760e01b8152600060048201526024016102ec565b6112e481611314565b50565b6000546001600160a01b0316331461092d5760405163118cdaa760e01b81523360048201526024016102ec565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261138357600080fd5b50813567ffffffffffffffff81111561139b57600080fd5b6020830191508360208285010111156113b357600080fd5b9250929050565b600080600080604085870312156113d057600080fd5b843567ffffffffffffffff808211156113e857600080fd5b6113f488838901611371565b9096509450602087013591508082111561140d57600080fd5b5061141a87828801611371565b95989497509550505050565b80356001600160a01b038116811461143d57600080fd5b919050565b60006020828403121561145457600080fd5b61145d82611426565b9392505050565b60006020828403121561147657600080fd5b5035919050565b6000815180845260005b818110156114a357602081850181015186830182015201611487565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156114fc5781516001600160a01b0316875295820195908201906001016114d7565b509495945050505050565b602081526000825160a0602084015261152360c084018261147d565b90506020840151601f1980858403016040860152611541838361147d565b92506001600160a01b0360408701511660608601526060860151608086015260808601519150808584030160a08601525061157c82826114c3565b95945050505050565b6000806040838503121561159857600080fd5b823591506115a860208401611426565b90509250929050565b60208152600061145d60208301846114c3565b6000600182016115e457634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061161557607f821691505b60208210810361163557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561168557600081815260208120601f850160051c810160208610156116625750805b601f850160051c820191505b818110156116815782815560010161166e565b5050505b505050565b67ffffffffffffffff8311156116a2576116a26115eb565b6116b6836116b08354611601565b8361163b565b6000601f8411600181146116ea57600085156116d25750838201355b600019600387901b1c1916600186901b178355611744565b600083815260209020601f19861690835b8281101561171b57868501358255602094850194600190920191016116fb565b50868210156117385760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b604081528260408201528284606083013760006060848301015260006060601f19601f86011683010190506001600160a01b0383166020830152949350505050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203f7734aaef142b838b3a9f9bf3f10b7d241561185e3a9429875881ee893a086364736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063dd18299611610066578063dd18299614610255578063eac3fda414610268578063ebb994311461027d578063f2fde38b1461029057600080fd5b80638da5cb5b146101e857806397a6278e146102035780639857518814610216578063daf60b711461022957600080fd5b8063370603f8116100d3578063370603f81461019a578063715018a6146101ba57806374d0a676146101c257806384e79842146101d557600080fd5b806303b28c33146101055780631f5bdf5d1461011a5780631ffbb0641461015b5780632199d5cd14610187575b600080fd5b6101186101133660046113ba565b6102a3565b005b610146610128366004611442565b6001600160a01b031660009081526004602052604090205460ff1690565b60405190151581526020015b60405180910390f35b610146610169366004611442565b6001600160a01b031660009081526003602052604090205460ff1690565b610118610195366004611442565b6104b9565b6101ad6101a8366004611464565b6106b1565b6040516101529190611507565b61011861091b565b6101186101d0366004611585565b61092f565b6101186101e3366004611442565b610ad7565b6000546040516001600160a01b039091168152602001610152565b610118610211366004611442565b610bea565b610118610224366004611442565b610ca3565b610146610237366004611442565b6001600160a01b031660009081526005602052604090205460ff1690565b610118610263366004611442565b610e1b565b610270610f96565b60405161015291906115b1565b61011861028b366004611442565b6110b4565b61011861029e366004611442565b6112a9565b826102f55760405162461bcd60e51b815260206004820152601e60248201527f436f6d6d756e697479206e616d652063616e6e6f7420626520656d707479000060448201526064015b60405180910390fd5b806103685760405162461bcd60e51b815260206004820152602560248201527f436f6d6d756e697479206465736372697074696f6e2063616e6e6f742062652060448201527f656d70747900000000000000000000000000000000000000000000000000000060648201526084016102ec565b3360009081526004602052604090205460ff168061039557503360009081526005602052604090205460ff165b6104075760405162461bcd60e51b815260206004820152603860248201527f4f6e6c792072656769737465726564207573657273206f7220656e746974696560448201527f732063616e2063726561746520636f6d6d756e6974696573000000000000000060648201526084016102ec565b6001805460009182610418836115c4565b9091555060008181526002602052604090209091508061043986888361168a565b506001810161044984868361168a565b5060028101805473ffffffffffffffffffffffffffffffffffffffff19163390811790915542600383015560405183917f4df3410150bc135fb5a7782051351442aaa4dc2b49b9180723c871b74e0a2201916104a9918a918a919061174b565b60405180910390a2505050505050565b3360009081526003602052604090205460ff166105245760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b03811661057a5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265676973746572207a65726f20616464726573730000000060448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16156105e35760405162461bcd60e51b815260206004820152601760248201527f5573657220616c7265616479207265676973746572656400000000000000000060448201526064016102ec565b6001600160a01b03811660009081526005602052604090205460ff16156106585760405162461bcd60e51b8152602060048201526024808201527f4164647265737320616c7265616479207265676973746572656420617320656e6044820152637469747960e01b60648201526084016102ec565b6001600160a01b0381166000818152600460209081526040808320805460ff19166001179055519182527f28a24a60e275c9be5babc23ecefd3240b1fcd56ef4d3fe4818437200b55ae5ff91015b60405180910390a250565b6106ec6040518060a00160405280606081526020016060815260200160006001600160a01b0316815260200160008152602001606081525090565b600154821061073d5760405162461bcd60e51b815260206004820152601860248201527f436f6d6d756e69747920646f6573206e6f74206578697374000000000000000060448201526064016102ec565b60008281526002602052604090819020815160a0810190925280548290829061076590611601565b80601f016020809104026020016040519081016040528092919081815260200182805461079190611601565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b505050505081526020016001820180546107f790611601565b80601f016020809104026020016040519081016040528092919081815260200182805461082390611601565b80156108705780601f1061084557610100808354040283529160200191610870565b820191906000526020600020905b81548152906001019060200180831161085357829003601f168201915b505050505081526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561090b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108ed575b5050505050815250509050919050565b6109236112e7565b61092d6000611314565b565b60015482106109805760405162461bcd60e51b815260206004820152601860248201527f436f6d6d756e69747920646f6573206e6f74206578697374000000000000000060448201526064016102ec565b600082815260026020819052604090912001546001600160a01b031633146109ea5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79207468652063726561746f722063616e20616464206d656d6265727360448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16610a525760405162461bcd60e51b815260206004820181905260248201527f4d656d626572206d75737420626520612072656769737465726564207573657260448201526064016102ec565b6000828152600260209081526040808320600401805460018101825590845292829020909201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516908117909155915191825283917ff328ac0f8bcae00933fe87ba0aa2d0d505c1df94bc9c1aa05b8441c28b74032c910160405180910390a25050565b610adf6112e7565b6001600160a01b038116610b355760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420616464207a65726f2061646472657373206173206167656e7460448201526064016102ec565b6001600160a01b03811660009081526003602052604090205460ff1615610b9e5760405162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c726561647920616e206167656e74000000000060448201526064016102ec565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517ff68e73cec97f2d70aa641fb26e87a4383686e2efacb648f2165aeb02ac562ec59190a250565b610bf26112e7565b6001600160a01b03811660009081526003602052604090205460ff16610c5a5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e206167656e7400000000000000000060448201526064016102ec565b6001600160a01b038116600081815260036020526040808220805460ff19169055517fed9c8ad8d5a0a66898ea49d2956929c93ae2e8bd50281b2ed897c5d1a6737e0b9190a250565b3360009081526003602052604090205460ff16610d0e5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b038116610d645760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656d6f7665207a65726f206164647265737300000000000060448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16610dcc5760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f7420726567697374657265640000000000000000000000000060448201526064016102ec565b6001600160a01b0381166000818152600460209081526040808320805460ff19169055519182527f57ffeda2cca1356c20c3f388d439e7ee49a825f846a911f8981726bea201188f91016106a6565b3360009081526003602052604090205460ff16610e865760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b038116610edc5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656d6f7665207a65726f206164647265737300000000000060448201526064016102ec565b6001600160a01b03811660009081526005602052604090205460ff16610f445760405162461bcd60e51b815260206004820152601560248201527f456e74697479206e6f742072656769737465726564000000000000000000000060448201526064016102ec565b6001600160a01b038116600081815260056020908152604091829020805460ff191690559051600181527f57ffeda2cca1356c20c3f388d439e7ee49a825f846a911f8981726bea201188f91016106a6565b60606000805b43811015610fe5576001600160a01b03811660009081526003602052604090205460ff1615610fd35781610fcf816115c4565b9250505b80610fdd816115c4565b915050610f9c565b5060008167ffffffffffffffff811115611001576110016115eb565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5090506000805b438110156110ab576001600160a01b03811660009081526003602052604090205460ff161561109957808383611066816115c4565b9450815181106110785761107861178d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b806110a3816115c4565b915050611031565b50909392505050565b3360009081526003602052604090205460ff1661111f5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206167656e74732063616e20706572666f726d20746869732061637460448201526234b7b760e91b60648201526084016102ec565b6001600160a01b0381166111755760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265676973746572207a65726f20616464726573730000000060448201526064016102ec565b6001600160a01b03811660009081526005602052604090205460ff16156111de5760405162461bcd60e51b815260206004820152601960248201527f456e7469747920616c726561647920726567697374657265640000000000000060448201526064016102ec565b6001600160a01b03811660009081526004602052604090205460ff16156112525760405162461bcd60e51b815260206004820152602260248201527f4164647265737320616c7265616479207265676973746572656420617320757360448201526132b960f11b60648201526084016102ec565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600190811790915591519182527f28a24a60e275c9be5babc23ecefd3240b1fcd56ef4d3fe4818437200b55ae5ff91016106a6565b6112b16112e7565b6001600160a01b0381166112db57604051631e4fbdf760e01b8152600060048201526024016102ec565b6112e481611314565b50565b6000546001600160a01b0316331461092d5760405163118cdaa760e01b81523360048201526024016102ec565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261138357600080fd5b50813567ffffffffffffffff81111561139b57600080fd5b6020830191508360208285010111156113b357600080fd5b9250929050565b600080600080604085870312156113d057600080fd5b843567ffffffffffffffff808211156113e857600080fd5b6113f488838901611371565b9096509450602087013591508082111561140d57600080fd5b5061141a87828801611371565b95989497509550505050565b80356001600160a01b038116811461143d57600080fd5b919050565b60006020828403121561145457600080fd5b61145d82611426565b9392505050565b60006020828403121561147657600080fd5b5035919050565b6000815180845260005b818110156114a357602081850181015186830182015201611487565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156114fc5781516001600160a01b0316875295820195908201906001016114d7565b509495945050505050565b602081526000825160a0602084015261152360c084018261147d565b90506020840151601f1980858403016040860152611541838361147d565b92506001600160a01b0360408701511660608601526060860151608086015260808601519150808584030160a08601525061157c82826114c3565b95945050505050565b6000806040838503121561159857600080fd5b823591506115a860208401611426565b90509250929050565b60208152600061145d60208301846114c3565b6000600182016115e457634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061161557607f821691505b60208210810361163557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561168557600081815260208120601f850160051c810160208610156116625750805b601f850160051c820191505b818110156116815782815560010161166e565b5050505b505050565b67ffffffffffffffff8311156116a2576116a26115eb565b6116b6836116b08354611601565b8361163b565b6000601f8411600181146116ea57600085156116d25750838201355b600019600387901b1c1916600186901b178355611744565b600083815260209020601f19861690835b8281101561171b57868501358255602094850194600190920191016116fb565b50868210156117385760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b604081528260408201528284606083013760006060848301015260006060601f19601f86011683010190506001600160a01b0383166020830152949350505050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203f7734aaef142b838b3a9f9bf3f10b7d241561185e3a9429875881ee893a086364736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "addAgent(address)": {
        "details": "Adds a new agent",
        "params": {
          "_agent": "Address of the agent to add - pet vets"
        }
      },
      "addMember(uint256,address)": {
        "details": "Adds a member to a community",
        "params": {
          "_communityId": "ID of the community",
          "_member": "Address of the member to add"
        }
      },
      "constructor": {
        "details": "Constructor initializes the contract with the deployer as owner"
      },
      "createCommunity(string,string)": {
        "details": "Creates a new community",
        "params": {
          "_description": "Description of the community",
          "_name": "Name of the community"
        }
      },
      "getAgents()": {
        "details": "Returns a list of all agents"
      },
      "getCommunity(uint256)": {
        "details": "Retrieves community information",
        "params": {
          "_communityId": "ID of the community"
        }
      },
      "isAgent(address)": {
        "details": "Checks if an address is an agent",
        "params": {
          "_address": "Address to check"
        }
      },
      "isRegisteredEntity(address)": {
        "details": "Checks if an address is a registered entity",
        "params": {
          "_address": "Address to check"
        }
      },
      "isRegisteredUser(address)": {
        "details": "Checks if an address is a registered user",
        "params": {
          "_address": "Address to check"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerEntity(address)": {
        "details": "Registers an entity",
        "params": {
          "_entity": "Address of the entity to register"
        }
      },
      "registerUser(address)": {
        "details": "Registers a normal user",
        "params": {
          "_user": "Address of the user to register"
        }
      },
      "removeAgent(address)": {
        "details": "Removes an agent",
        "params": {
          "_agent": "Address of the agent to remove"
        }
      },
      "removeEntity(address)": {
        "details": "Removes an entity",
        "params": {
          "_entity": "Address of the entity to remove"
        }
      },
      "removeUser(address)": {
        "details": "Removes a normal user",
        "params": {
          "_user": "Address of the user to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/RegisterUsers.sol:RegisterUsers",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2843,
        "contract": "contracts/RegisterUsers.sol:RegisterUsers",
        "label": "communityIdCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2860,
        "contract": "contracts/RegisterUsers.sol:RegisterUsers",
        "label": "communities",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Community)2855_storage)"
      },
      {
        "astId": 2864,
        "contract": "contracts/RegisterUsers.sol:RegisterUsers",
        "label": "agents",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2868,
        "contract": "contracts/RegisterUsers.sol:RegisterUsers",
        "label": "registeredUsers",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2872,
        "contract": "contracts/RegisterUsers.sol:RegisterUsers",
        "label": "registeredEntities",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Community)2855_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RegisterUsers.Community)",
        "numberOfBytes": "32",
        "value": "t_struct(Community)2855_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Community)2855_storage": {
        "encoding": "inplace",
        "label": "struct RegisterUsers.Community",
        "members": [
          {
            "astId": 2845,
            "contract": "contracts/RegisterUsers.sol:RegisterUsers",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2847,
            "contract": "contracts/RegisterUsers.sol:RegisterUsers",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 2849,
            "contract": "contracts/RegisterUsers.sol:RegisterUsers",
            "label": "creator",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2851,
            "contract": "contracts/RegisterUsers.sol:RegisterUsers",
            "label": "createdAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2854,
            "contract": "contracts/RegisterUsers.sol:RegisterUsers",
            "label": "members",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}